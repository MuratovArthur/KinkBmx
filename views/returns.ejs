<%- include("partials/header") %>


<link rel="stylesheet" type="text/css" href="/stylesheets/returns.css">
<header class="returns-page-header">
	<h1 class="returns-page-title">Returns</h1>
</header>

<div class="returns-page-content">




	<b>Refunds</b>
	<ul>
		<li class="returns-page-content-li">We want you to be completely satisfied with your purchase! If you are not 100% satisfied, you can return your item(s) for a refund within 30 days of purchase. (Returns must be unused, in the same condition you received them, and in the original packaging.)</li>
	</ul>
	<b>Refund and Exchange Details</b>
	<ul>
		<li class="returns-page-content-li">Upon the arrival of your order, inspect your shipment carefully. If there is any loss or damage, please contact us immediately.</li>
		<li class="returns-page-content-li">To qualify for a refund, all products must be in their original, unaltered packaging, including boxes and labels.</li>
		<li class="returns-page-content-li">Shipping and handling charges are non-refundable.</li>
		<li class="returns-page-content-li">Return/exchange shipping costs to be paid by the purchaser.</li>
		<li class="returns-page-content-li">Returned items may incur a restocking fee determined by Kink BMX.</li>
		<li class="returns-page-content-li">Kink will refuse items returned in unsalable condition OR reduce the refund amount by 50%.</li>
		<li class="returns-page-content-li">Returned clothing must be clean and unwashed.</li>
		<li class="returns-page-content-li">Items can only be returned or exchanged if they were bought from our website, otherwise please contact the retailer where you purchased the item.</li>
	</ul>
	<b>Refund Process</b>
	<ul>
		<li class="returns-page-content-li">Fill out our return/exchange form found below.</li>
		<li class="returns-page-content-li">Print out your email receipt and place it in the box you are returning.</li>
		<li class="returns-page-content-li">Ship it back via USPS Priority Mail, UPS, or FedEx to:</li>
		    <p class="returns-page-content-p" style="margin-top:20px; ">Kink BMX</p>
		    <p class="returns-page-content-p">ATTN: Returns</p>
		    <p class="returns-page-content-p">40 Greenleaf St</p>
		    <p class="returns-page-content-p">Rochester, NY 14609</p>
		    <p class="returns-page-content-p"  style="margin-bottom: 20px; ">USA</p>
		<li class="returns-page-content-li">Refunds will be issued within 5-7 business days of receiving your return, and can only be refunded to the original credit card or PayPal account that was used for the purchase.</li>
	</ul>
	<b>Exchange Process</b>
	<ul>
		<li class="returns-page-content-li">Email info@kinkbmx.com or call us at (585) 654-5250 before sending us your item(s) so that we can verify the replacement item is in stock.</li>
		<li class="returns-page-content-li">Fill out the return/exchange form below.</li>
		<li class="returns-page-content-li">Ship the item(s) back via USPS Priority Mail, UPS, or FedEx to:</li>
		    <p class="returns-page-content-p" style="margin-top:20px; ">Kink BMX</p>
		    <p class="returns-page-content-p">ATTN: Returns</p>
		    <p class="returns-page-content-p">40 Greenleaf St</p>
		    <p class="returns-page-content-p">Rochester, NY 14609</p>
		    <p class="returns-page-content-p"  style="margin-bottom: 20px; ">USA</p>
		<li class="returns-page-content-li">Replacement items will be shipped out once your returned items have been received.</li>
	</ul>
	<hr class="returns-page-content-hr" id="flash">

         <div class="errors" >
            <ul class="ul-register">
                <li>Please enter all of first four fields with "*"</li>
            </ul>
         </div>

          <% if(success && success.length > 0) { %>
         <div class="success">
            <ul class="ul-register">
                <li><%= success %> </li>
            </ul>
         </div>
       <% } %>


	<form action="/pages/returns" method="post">
	<h6 class="returns-page-content-h6">Customer Info</h6>
	<div class="row">
		<div class="col-md-6 returns-page-content-col-md-6">
			<div class="date-picker">
			<input class="returns-page-content-input selected-date returns-page-content-input-main" name="return[date]" placeholder="Date (dd/mm/yyyy)*" readonly="readonly">
			    <div class="dates">

			    <div class="month">
				<div class="arrows prev-mth">&lt;</div>
				<div class="mth"></div>
				<div class="arrows next-mth">&gt;</div>
			    </div>

			     <div class="days"></div>

		         </div>
		    </div>
		</div>
		<div class="col-md-6 returns-page-content-col-md-6">
			<input class="returns-page-content-input returns-page-content-input-main" type="" name="return[order]" placeholder="Order #*">
		</div>
		<div class="col-md-6 returns-page-content-col-md-6">
			<input class="returns-page-content-input returns-page-content-input-main" type="" name="return[firstName]" placeholder="First Name*">
		</div>
		<div class="col-md-6 returns-page-content-col-md-6">
			<input class="returns-page-content-input returns-page-content-input-main" type="" name="return[secondName]" placeholder="Last Name*">
		</div>
		<div class="col-md-12 returns-page-content-col-md-12">
			<input class="returns-page-content-input returns-page-content-input-main" type="" name="return[streetAdress]" placeholder="Street Adress*">
		</div>
		<div class="col-md-12 returns-page-content-col-md-12">
			<input class="returns-page-content-input" type="" name="return[streetAdressLine]" placeholder="Street Adress Line 2">
		</div>
		<div class="col-md-6 returns-page-content-col-md-6">
			<input class="returns-page-content-input returns-page-content-input-main" name="return[city]" placeholder="City*">
		</div>
		<div class="col-md-6 returns-page-content-col-md-6">
			<input class="returns-page-content-input returns-page-content-input-main" type="" name="return[state]" placeholder="State/Province*">
		</div>
		<div class="col-md-6 returns-page-content-col-md-6">
			<input class="returns-page-content-input returns-page-content-input-main" type="" name="return[zip]" placeholder="ZIP/Postal code*">
		</div>
		<div class="col-md-6 returns-page-content-col-md-6">
			<input class="returns-page-content-input returns-page-content-input-main" type="" name="return[country]" placeholder="Country*">
		</div>
		<div class="col-md-6 returns-page-content-col-md-6">
			<input class="returns-page-content-input returns-page-content-input-main" type="email" name="return[email]" placeholder="Email*">
		</div>
		<div class="col-md-6 returns-page-content-col-md-6">
			<input class="returns-page-content-input returns-page-content-input-main" type="" name="return[phoneNumber]" placeholder="Phone Number*">
		</div>
	</div>
		<h6 class="returns-page-content-h6">Return Details</h6>
	<div class="row">
		<div class="col-md-6 returns-page-content-col-md-6">
			<input class="returns-page-content-input returns-page-content-input-main" name="return[item]" placeholder="Item being returned(Ex. Titan II) Frame*">
		</div>
		<div class="col-md-6 returns-page-content-col-md-6">
			<input class="returns-page-content-input" type="" name="return[reason]" placeholder="Reason for return">
		</div>
	</div>
	<h6 class="returns-page-content-h6">Additional comments</h6>
	<div class="row row-textarea">
		<div class="col-md-12 returns-page-content-col-md-12">
			<textarea class="returns-page-content-textarea" name="return[comment]"></textarea>
		</div>
	</div>
	<div class="clickable">
		<button class="returns-button" type="submit"><p class="returns-button-text" >Submit</p></button>
	</div>
	
</div>
</form>


<script type="text/javascript">
const date_picker_element = document.querySelector('.date-picker');
const selected_date_element = document.querySelector('.selected-date');
const dates_element = document.querySelector('.date-picker .dates');
const mth_element = document.querySelector('.date-picker .dates .month .mth');
const next_mth_element = document.querySelector('.date-picker .dates .month .next-mth');
const prev_mth_element = document.querySelector('.date-picker .dates .month .prev-mth');
const days_element = document.querySelector('.date-picker .dates .days');
const inputs_main  = document.querySelectorAll(".returns-page-content-input-main");
const submit_btn = document.querySelector('.returns-button');
const clickable = document.querySelector('.clickable');
const errors_div = document.querySelector('.errors');




const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];

let date = new Date();
let day = date.getDate();
let month = date.getMonth();
let year = date.getFullYear();

let selectedDate = date;
let selectedDay = day;
let selectedMonth = month;
let selectedYear = year;

mth_element.textContent = months[month] + ' ' + year;



populateDates();
 checkInputs();

// EVENT LISTENERS

$('#fileOne').change(function() {
  $('.returns-button-text-upload-one').html('File Uploaded');
});

$('#fileTwo').change(function() {
  $('.returns-button-text-upload-two').html('File Uploaded');
});

clickable.addEventListener('click', showMessage);
date_picker_element.addEventListener('click', toggleDatePicker);
next_mth_element.addEventListener('click', goToNextMonth);
prev_mth_element.addEventListener('click', goToPrevMonth);

// FUNCTIONS
function showMessage(e) {
	errors_div.style.display = "block";
	window.location = "/pages/returns#flash";
}

function toggleDatePicker (e) {

	if (!checkEventPathForClass(e.path, 'dates')) {
		dates_element.classList.toggle('active');
		selected_date_element.value = formatDate(selectedDate);
        selected_date_element.dataset.value = selectedDate;
		checkInputs();
	}
}

function hideMessage (e) {
	errors_div.style.display = "none";
}

function checkInputs (e){	
        
        inputs_main.forEach((input) => {
        	input.oninput = function (){
	        if (input.value == ""){
        		input.style.borderColor = "red";
        	}
            if (input.value !== ""){
        		input.style.borderColor = 'rgb(129, 129, 129)';
        		$('.returns-button').attr('disabled', false);
        		clickable.addEventListener('click', hideMessage);
            }
            };
         	
        	if (input.value == ""){
        		input.style.borderColor = "red";
        		$('.returns-button').attr('disabled', true);
        	}
            if (input.value !== ""){
        		input.style.borderColor = 'rgb(129, 129, 129)';
        		$('.returns-button').attr('disabled', false);
        		clickable.addEventListener('click', hideMessage);
            }
        });
}

function goToNextMonth (e) {
	month++;
	if (month > 11) {
		month = 0;
		year++;
	}
	mth_element.textContent = months[month] + ' ' + year;
	populateDates();
}

function goToPrevMonth (e) {
	month--;
	if (month < 0) {
		month = 11;
		year--;
	}
	mth_element.textContent = months[month] + ' ' + year;
	populateDates();
}

function populateDates (e) {
	days_element.innerHTML = '';

	if (month % 2 == 0 ){ 
	    if (month == 8 || month == 10) {
            var amount_days = 30;
	    } else {
	    	var amount_days = 31;
	    }
		
	} else {
		if (month == 1) {
			if(year % 4 == 0){
                 var amount_days = 29;
			} else {
				 var amount_days = 28;
			}
		   
	    } 
	    else if (month == 7 || month == 9 || month == 11){
	    var amount_days = 31;
	    } else {
	    	var amount_days = 30;
	    }
	}

	for (let i = 0; i < amount_days; i++) {
		const day_element = document.createElement('div');
		day_element.classList.add('day');
		day_element.textContent = i + 1;

		if (selectedDay == (i + 1) && selectedYear == year && selectedMonth == month) {
			day_element.classList.add('selected');
		}
        
		day_element.addEventListener('click', function () {
			selectedDate = new Date(year + '-' + (month + 1) + '-' + (i + 1));
			selectedDay = (i + 1);
			selectedMonth = month;
			selectedYear = year;

			selected_date_element.value = formatDate(selectedDate);

			selected_date_element.dataset.value = selectedDate;

			populateDates();

		});

		days_element.appendChild(day_element);


	}
}

// HELPER FUNCTIONS
function checkEventPathForClass (path, selector) {
	for (let i = 0; i < path.length; i++) {
		if (path[i].classList && path[i].classList.contains(selector)) {
			return true;
		}
	}
	
	return false;

}
function formatDate (d) {
	let day = d.getDate();
	if (day < 10) {
		day = '0' + day;
	}

	let month = d.getMonth() + 1;
	if (month < 10) {
		month = '0' + month;
	}

	let year = d.getFullYear();

	return day + ' / ' + month + ' / ' + year;

}

</script>
<%- include("partials/footer") %>

